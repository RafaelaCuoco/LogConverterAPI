# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: CI/CD Pipeline for .NET Project

# Define quando o workflow será acionado
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

# Define os jobs que serão executados
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Passo 1: Fazer o checkout do código
    - name: Checkout code
      uses: actions/checkout@v3
    
    # Passo 2: Instalar OpenSSL (compatível com .NET Core 2.1)
    - name: Install OpenSSL
      run: |
        sudo apt-get update
        sudo apt-get install -y libssl1.1

    # Passo 3: Configurar o SDK do .NET
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '2.1.x'
        
    # Passo 4: Cache NuGets
    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    
    # Passo 5: Restaurar as dependências
    - name: Restore dependencies
      run: dotnet restore

    # Passo 6: Compilar o projeto
    - name: Build project
      run: dotnet build --configuration Release --no-restore

    # Passo 7: Executar os testes
    - name: Run tests
      run: dotnet test --no-build --verbosity normal
    - name: Publish to GitHub Packages
      run: dotnet pack --configuration Release --output ./nupkg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Passo 8: Publicar o projeto (opcional)
    - name: Publish project
      if: github.ref == 'refs/heads/main' # Executa apenas na branch principal
      run: dotnet publish -c Release -o ./publish
